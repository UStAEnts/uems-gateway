{
    "openapi": "3.0.0",
    "info": {
        "title": "UEMS Gateway Interface",
        "version": "2.0",
        "description": "The gateway of the UEMS platform, used by the frontend web API",
        "contact": {
            "name": "Ryan Delaney",
            "email": "ryan.delaney@xiomi.org",
            "url": "https://xiomi.org"
        }
    },
    "servers": [],
    "paths": {
        "/equipment": {
            "get": {
                "description": "Full querying support for equipment is provided through this endpoint. Individual equipment entries can be looked up via the /equipment/{id} endpoint. ",
                "summary": "Search for equipment",
                "tags": [
                    "equipment"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "amount"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "assetID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "category"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "date"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "locationID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "locationSpecifier"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "managerID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "manufacturer"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "miscIdentifier"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "model"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EquipmentList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This adds a new piece of equipment to the entry catalogue",
                "summary": "Creates a new equipment asset",
                "tags": [
                    "equipment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EquipmentBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/equipment/{id}": {
            "get": {
                "description": "Retrieves information about a single equipment entry based on ID. ",
                "summary": "Get details for a single equipment entry",
                "tags": [
                    "equipment"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID of this piece of equipment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/Equipment"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a single equipment entry from the database",
                "summary": "Deletes a piece of equipment",
                "tags": [
                    "equipment"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this piece of equipment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Deletes this piece of equipment from the records unless there are dependent objects on it",
                "summary": "Deletes an equipment entry",
                "tags": [
                    "equipment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH EquipmentIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this piece of equipment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ents": {
            "get": {
                "description": "Supports querying a set of ents states based on a range of properties",
                "summary": "Queries ent state",
                "tags": [
                    "ents"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "color"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "icon"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EntStateList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new ent state and returns its identifier based on the body provided",
                "summary": "Create a new ent state",
                "tags": [
                    "ents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EntsBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ents/{id}": {
            "get": {
                "description": "Returns a single ent state record based on its unique ID",
                "summary": "Retrieve a single ent state",
                "tags": [
                    "ents"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID of this ent state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EntState"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an ent state from the system provided there are no other objects depending on this object",
                "summary": "Delete an ents state",
                "tags": [
                    "ents"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for the ent state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the properties of an ents state with the modifications specified in the body",
                "summary": "Updates an ent state",
                "tags": [
                    "ents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH EntsIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this ent state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "patch": {
                "description": "This will modify the properties of the event as requested",
                "summary": "Updates this event",
                "tags": [
                    "event"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH EventsIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "This will try and delete the event as long as no other objects rely on the entity. This is restricted to staff as for users events should be cancelled rather than deleted to provide a comprehensive audit trail of the processes. ",
                "summary": "Delete an event",
                "tags": [
                    "event"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Returns the event associated with the given ID if one exists",
                "summary": "Retrieves a single event",
                "tags": [
                    "event"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID of this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UEMSEvent"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "post": {
                "description": "Creates a new event with the given configuration",
                "summary": "Create a new event",
                "tags": [
                    "event"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EventsBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Returns all events matching the filters defined in the query",
                "summary": "Retrieve events matching a filter",
                "tags": [
                    "event"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "attendance"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "attendanceGreater"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "attendanceLess"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "end"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "endAfter"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "endBefore"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "entsID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "start"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "startAfter"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "startBefore"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "stateID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "venueCriteria"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EventList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/states/{id}/events": {
            "get": {
                "description": "This will return the details of all events which have the given state associated with them",
                "summary": "Returns all events for the given state",
                "tags": [
                    "event",
                    "state"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID of this state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EventList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/venues/{id}/events": {
            "get": {
                "description": "Returns all events that have ever taken place in the given venue",
                "summary": "Returns all events taking place in the given venue",
                "tags": [
                    "event",
                    "venue"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID of the venue",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EventList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/comments": {
            "get": {
                "description": "Returns all comments which are associated with the given event identifier",
                "summary": "Returns all comments on the event",
                "tags": [
                    "event",
                    "comment"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/CommentList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new comment to the event associated with the id provided",
                "summary": "Posts a new comment on this event",
                "tags": [
                    "event",
                    "comment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EventsIdCommentsBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/comments/{commentID}/attention": {
            "post": {
                "description": "This will flag this comment as needing attention from another member of staff before the event can go ahead",
                "summary": "Marks this comment as requiring attention",
                "tags": [
                    "event",
                    "comment"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "commentID",
                        "description": "The unique identifier for the comment associated with this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/comments/{commentID}/resolve": {
            "post": {
                "description": "Marks the comment on the given event as resolved meaning it no longer requires attention by another staff member",
                "summary": "Marks a comment as resolved",
                "tags": [
                    "event",
                    "comment"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "commentID",
                        "description": "The unique identifier for the comment associated with this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/review": {
            "get": {
                "description": "This will return all events that are currently marked with the review state or who have not yet had their time reserved in the booking system",
                "summary": "Retrieves all events requiring attention",
                "tags": [
                    "event",
                    "ops"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EventList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Return files matching the given query",
                "summary": "Search for files",
                "tags": [
                    "file"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "date"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "filename"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "size"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "type"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "userid"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "sizeGreater"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "sizeLess"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UEMSFileList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This will create a new file entry without any associated content. The actual file upload will take place separately through the returned upload URI to which you should upload the actual content of the file. The result of this call is to createa  file metadata entry only. If you do not upload a file within a certain time frame, the metadata record will be automatically deleted so it is recommended you upload the file immediately after.",
                "summary": "Add a new file entry",
                "tags": [
                    "file"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  FilesBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileCreateReply"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{id}": {
            "get": {
                "description": "Returns properties for a single file entry",
                "summary": "Get a single file",
                "tags": [
                    "file"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for the files",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UEMSFile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "This will remove a file from the system providing no other objects are currently depending on it",
                "summary": "Delete a file",
                "tags": [
                    "file"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the name and type of a file currently in the system",
                "summary": "Update a file",
                "tags": [
                    "file"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH FilesIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/{id}/events": {
            "get": {
                "description": "Returns all events which have been bound with this file",
                "summary": "Get all events associated with a file",
                "tags": [
                    "file",
                    "event"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/EventList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}/files": {
            "get": {
                "description": "Returns all files associated with a given event",
                "summary": "Get all files for an event",
                "tags": [
                    "event",
                    "file"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UEMSFileList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Links a file by ID to the event ID specified in the path",
                "summary": "Link a file to an event",
                "tags": [
                    "file",
                    "event"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EventsIdFilesBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{eventID}/files/{fileID}": {
            "delete": {
                "description": "Removes any link between this file and event if one exists",
                "summary": "Unlink a file an event",
                "tags": [
                    "event",
                    "file"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique identifier for the event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "fileID",
                        "description": "The unique ID for this file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{eventID}/signups": {
            "get": {
                "description": "Returns signups from the given event, filtered by the given opens",
                "summary": "Get signups",
                "tags": [
                    "signup"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique event identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "date"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "userid"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "dateRangeBegin"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "dateRangeEnd"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "role"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/SignupList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "With this endpoint you can register to join an event (authentication as ops or ents required), or sign another user up to the event (must be an admin)",
                "summary": "Add a signup to an event",
                "tags": [
                    "signup",
                    "event"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  EventsEventidSignupsBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{eventID}/signups/{id}": {
            "get": {
                "description": "This will return details of a single signup identified by ID on an event if the record exists",
                "summary": "Get details of a signup",
                "tags": [
                    "event",
                    "signup"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the signup registered against this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/Signup"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "With this endpoint you can remove your own signup from an event or the sign up of another user (if you are an ent, ops or admin)",
                "summary": "Remove a signup",
                "tags": [
                    "signup",
                    "event"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this signup",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "You can change the role of the signup on this signup on the provided event. If you are an admin you can edit any signup, otherwise it will only be your own signups",
                "summary": "Update a signup",
                "tags": [
                    "signup",
                    "event"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH EventsEventidSignupsIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventID",
                        "description": "The unique identifier for this event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this signup",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/states": {
            "get": {
                "description": "Returns all states matching a particular query, otherwise return all the states in the system",
                "summary": "Search for a state",
                "tags": [
                    "state"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "icon"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "color"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/StateList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This will insert the specified state into the system and return the newly appointed ID",
                "summary": "Creates a state",
                "tags": [
                    "state"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  StatesBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/states/{id}": {
            "get": {
                "description": "Returns the properties of a single individual state",
                "summary": "Gets a state",
                "tags": [
                    "state"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/State"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "This will remove a state from the system provided it is not a required dependency of any other object.",
                "summary": "Deletes a state",
                "tags": [
                    "state"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "The values provided in the body will be updated in the state",
                "summary": "Update the properties of a state",
                "tags": [
                    "state"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH StatesIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this state",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/states/review": {
            "get": {
                "description": "This will return the list of states that have been marked as requiring manual review when assigned to events",
                "summary": "Get review states",
                "tags": [
                    "state"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/StateList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics": {
            "get": {
                "description": "This will return all topics matching the provided filters",
                "summary": "Search topics",
                "tags": [
                    "topic"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "icon"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "color"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "description"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/TopicList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This will create a new topic with the specified details, returning the newly generated ID",
                "summary": "Create a new topic",
                "tags": [
                    "topic"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  TopicsBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics/{id}": {
            "get": {
                "description": "Returns all properties associated with the given topic",
                "summary": "Get a topic",
                "tags": [
                    "topic"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this topic",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/Topic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "This will remove a topic provided there are no critical dependencies on it",
                "summary": "Delete a topic",
                "tags": [
                    "topic"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this topic",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "This will update the specified properties against the provided topic",
                "summary": "Update a topic",
                "tags": [
                    "topic"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH TopicsIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this topic",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "This will allow you to query users by a range of properties. Emails will not be included unless you are a member of ops, ents or admin and queries by email will not be supported either",
                "summary": "Queries users by the given properties",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "in": "query",
                        "name": "email"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "in": "query",
                        "name": "id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "in": "query",
                        "name": "name"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "in": "query",
                        "name": "username"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UserList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieves properties on a single user, emails will only be included if you are part of the ops, ents or admin groups",
                "summary": "Get a user",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Purge a user from existence (in the system, living people are left unharmed). Only usable by admins and will only delete user metadata. Actual user credentials and login permissions should be managed through the associated keycloak or user management platform. If you delete a user their records will be regenerated from keycloak on their next login / authentication assertion",
                "summary": "Delete a user",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "This will update internal user metadata about the user. Some properties may be overwritten by keycloak syncing but for example profile should be safe. If you are admin you can change any user otherwise only yourself",
                "summary": "Update user metadata",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH UserIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique ID for this user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/venues/{id}": {
            "get": {
                "description": "Get the properties of a single venue by ID",
                "summary": "Get a venue",
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this venue",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/Venue"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a venue from the system (physical buildings are unfortunately not removed)",
                "summary": "Delete a venue",
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this venue",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the properties of a venue as listed",
                "summary": "Update a venue",
                "tags": [
                    "venue"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PATCH VenuesIdBody"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The unique identifier for this venue",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/venues": {
            "post": {
                "description": "Adds a new venue with the associated properties, building construction is left as an exercise to the reader",
                "summary": "Create a new venue",
                "tags": [
                    "venue"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POST  VenuesBody"
                            }
                        }
                    }
                },
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ModifyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Search for venues against a range of properties",
                "summary": "Find a venue",
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "capacity"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "capacityGreater"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "required": false,
                        "in": "query",
                        "name": "capacityLess"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "in": "query",
                        "name": "name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/VenueList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whoami": {
            "get": {
                "description": "Details of your user account, unfortunately less philosophical answer",
                "summary": "Self introspection",
                "tags": [
                    "system"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "OK"
                                            ]
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/Whoami"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "FAILED"
                                            ]
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EquipmentList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "assetID": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "manufacturer": {
                            "type": "string"
                        },
                        "model": {
                            "type": "string"
                        },
                        "miscIdentifier": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "location": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "capacity": {
                                    "type": "number"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "username"
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "capacity",
                                "user"
                            ]
                        },
                        "locationSpecifier": {
                            "type": "string"
                        },
                        "manager": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "date": {
                            "type": "number"
                        },
                        "category": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "manufacturer",
                        "model",
                        "amount",
                        "location",
                        "manager",
                        "date",
                        "category"
                    ]
                }
            },
            "Equipment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "assetID": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "miscIdentifier": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "capacity": {
                                "type": "number"
                            },
                            "color": {
                                "type": "string"
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "profile": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "username"
                                ]
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "capacity",
                            "user"
                        ]
                    },
                    "locationSpecifier": {
                        "type": "string"
                    },
                    "manager": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "username"
                        ]
                    },
                    "date": {
                        "type": "number"
                    },
                    "category": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "manufacturer",
                    "model",
                    "amount",
                    "location",
                    "manager",
                    "date",
                    "category"
                ]
            },
            "ModifyResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "POST  EquipmentBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "location": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "assetID": {
                        "type": "string"
                    },
                    "miscIdentifier": {
                        "type": "string"
                    },
                    "locationSpecifier": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "manufacturer",
                    "model",
                    "amount",
                    "location",
                    "category"
                ]
            },
            "PATCH EquipmentIdBody": {
                "type": "object",
                "properties": {
                    "assetID": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "miscIdentifier": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "locationID": {
                        "type": "string"
                    },
                    "locationSpecifier": {
                        "type": "string"
                    },
                    "managerID": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    }
                }
            },
            "EntStateList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "color": {
                            "type": "string"
                        },
                        "icon": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "color",
                        "icon"
                    ]
                }
            },
            "EntState": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "color",
                    "icon"
                ]
            },
            "POST  EntsBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "icon",
                    "color"
                ]
            },
            "PATCH EntsIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                }
            },
            "PATCH EventsIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "start": {
                        "type": "number"
                    },
                    "end": {
                        "type": "number"
                    },
                    "attendance": {
                        "type": "number"
                    },
                    "addVenues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeVenues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ents": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "reserved": {
                        "type": "boolean"
                    }
                }
            },
            "POST  EventsBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "venue": {
                        "type": "string"
                    },
                    "start": {
                        "type": "number"
                    },
                    "end": {
                        "type": "number"
                    },
                    "attendance": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "ents": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "venue",
                    "start",
                    "end",
                    "attendance"
                ]
            },
            "EventList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "start": {
                            "type": "number"
                        },
                        "end": {
                            "type": "number"
                        },
                        "venues": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "capacity": {
                                        "type": "number"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "profile": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "username"
                                        ]
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "capacity",
                                    "user"
                                ]
                            }
                        },
                        "attendance": {
                            "type": "number"
                        },
                        "ents": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "icon": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "color",
                                "icon"
                            ]
                        },
                        "state": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "icon": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "color",
                                "icon"
                            ]
                        },
                        "author": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "reserved": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "start",
                        "end",
                        "venues",
                        "attendance",
                        "author"
                    ]
                }
            },
            "UEMSEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "start": {
                        "type": "number"
                    },
                    "end": {
                        "type": "number"
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "capacity": {
                                    "type": "number"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "username"
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "capacity",
                                "user"
                            ]
                        }
                    },
                    "attendance": {
                        "type": "number"
                    },
                    "ents": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "color",
                            "icon"
                        ]
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "color",
                            "icon"
                        ]
                    },
                    "author": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "username"
                        ]
                    },
                    "reserved": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "start",
                    "end",
                    "venues",
                    "attendance",
                    "author"
                ]
            },
            "CommentList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "assetType": {
                            "type": "string"
                        },
                        "assetID": {
                            "type": "string"
                        },
                        "poster": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "posted": {
                            "type": "number"
                        },
                        "topic": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "icon": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "color",
                                "icon",
                                "description"
                            ]
                        },
                        "requiresAttention": {
                            "type": "boolean"
                        },
                        "attendedDate": {
                            "type": "number"
                        },
                        "attendedBy": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "body": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "assetType",
                        "assetID",
                        "poster",
                        "posted",
                        "body"
                    ]
                }
            },
            "POST  EventsIdCommentsBody": {
                "type": "object",
                "properties": {
                    "topic": {
                        "type": "string"
                    },
                    "requiresAttention": {
                        "type": "boolean"
                    },
                    "body": {
                        "type": "string"
                    }
                },
                "required": [
                    "body"
                ]
            },
            "UEMSFileList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "filename": {
                            "type": "string"
                        },
                        "size": {
                            "type": "number"
                        },
                        "mime": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "type": {
                            "type": "string"
                        },
                        "date": {
                            "type": "number"
                        },
                        "downloadURL": {
                            "type": "string"
                        },
                        "checksum": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "filename",
                        "size",
                        "mime",
                        "owner",
                        "type",
                        "date",
                        "downloadURL",
                        "checksum"
                    ]
                }
            },
            "UEMSFile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "mime": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "username"
                        ]
                    },
                    "type": {
                        "type": "string"
                    },
                    "date": {
                        "type": "number"
                    },
                    "downloadURL": {
                        "type": "string"
                    },
                    "checksum": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "filename",
                    "size",
                    "mime",
                    "owner",
                    "type",
                    "date",
                    "downloadURL",
                    "checksum"
                ]
            },
            "FileCreateReply": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "OK"
                        ]
                    },
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "uploadURI": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "result",
                    "uploadURI"
                ]
            },
            "POST  FilesBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "filename",
                    "size",
                    "type"
                ]
            },
            "PATCH FilesIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "POST  EventsIdFilesBody": {
                "type": "object",
                "properties": {
                    "fileID": {
                        "type": "string"
                    }
                },
                "required": [
                    "fileID"
                ]
            },
            "SignupList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        },
                        "event": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "start": {
                                    "type": "number"
                                },
                                "end": {
                                    "type": "number"
                                },
                                "venues": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "capacity": {
                                                "type": "number"
                                            },
                                            "color": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "profile": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "username"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "capacity",
                                            "user"
                                        ]
                                    }
                                },
                                "attendance": {
                                    "type": "number"
                                },
                                "ents": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "type": "string"
                                        },
                                        "icon": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color",
                                        "icon"
                                    ]
                                },
                                "state": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "type": "string"
                                        },
                                        "icon": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "color",
                                        "icon"
                                    ]
                                },
                                "author": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "username"
                                    ]
                                },
                                "reserved": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "start",
                                "end",
                                "venues",
                                "attendance",
                                "author"
                            ]
                        },
                        "role": {
                            "type": "string"
                        },
                        "date": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "id",
                        "user",
                        "event",
                        "role",
                        "date"
                    ]
                }
            },
            "Signup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "username"
                        ]
                    },
                    "event": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "start": {
                                "type": "number"
                            },
                            "end": {
                                "type": "number"
                            },
                            "venues": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "capacity": {
                                            "type": "number"
                                        },
                                        "color": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "profile": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "username"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "capacity",
                                        "user"
                                    ]
                                }
                            },
                            "attendance": {
                                "type": "number"
                            },
                            "ents": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "color",
                                    "icon"
                                ]
                            },
                            "state": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "color",
                                    "icon"
                                ]
                            },
                            "author": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "profile": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "username"
                                ]
                            },
                            "reserved": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "start",
                            "end",
                            "venues",
                            "attendance",
                            "author"
                        ]
                    },
                    "role": {
                        "type": "string"
                    },
                    "date": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "user",
                    "event",
                    "role",
                    "date"
                ]
            },
            "POST  EventsEventidSignupsBody": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "signupUser": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "PATCH EventsEventidSignupsIdBody": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "StateList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "color": {
                            "type": "string"
                        },
                        "icon": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "color",
                        "icon"
                    ]
                }
            },
            "State": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "color",
                    "icon"
                ]
            },
            "POST  StatesBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "icon",
                    "color"
                ]
            },
            "PATCH StatesIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                }
            },
            "TopicList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "color": {
                            "type": "string"
                        },
                        "icon": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "color",
                        "icon",
                        "description"
                    ]
                }
            },
            "Topic": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "color",
                    "icon",
                    "description"
                ]
            },
            "POST  TopicsBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "icon",
                    "color",
                    "description"
                ]
            },
            "PATCH TopicsIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "UserList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "profile": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "username"
                    ]
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "username"
                ]
            },
            "PATCH UserIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    }
                }
            },
            "Venue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "color": {
                        "type": "string"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "profile": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "username"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "capacity",
                    "user"
                ]
            },
            "POST  VenuesBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "color": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "capacity",
                    "color"
                ]
            },
            "VenueList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "capacity": {
                            "type": "number"
                        },
                        "color": {
                            "type": "string"
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "profile": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "username"
                            ]
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "capacity",
                        "user"
                    ]
                }
            },
            "PATCH VenuesIdBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "color": {
                        "type": "string"
                    }
                }
            },
            "Whoami": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "profile",
                    "name"
                ]
            }
        },
        "parameters": {}
    },
    "tags": [
        {
            "name": "equipment"
        },
        {
            "name": "ents"
        },
        {
            "name": "event"
        },
        {
            "name": "state"
        },
        {
            "name": "venue"
        },
        {
            "name": "comment"
        },
        {
            "name": "ops"
        },
        {
            "name": "file"
        },
        {
            "name": "signup"
        },
        {
            "name": "topic"
        },
        {
            "name": "user"
        },
        {
            "name": "system"
        }
    ]
}